/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>

int main()
{
  printf("Hello from MT-3TB4 Group 5\n");

  int i;
  int char_err_num=0, short_err_num=0, int_err_num=0;

  char * char_ptr;

  char aChar;

  short *short_ptr;
  short aShort;

  int *int_ptr;
  int aInt;

  int charsize, shortsize, intsize;

  charsize=sizeof(aChar);
  shortsize=sizeof(aShort);
  intsize=sizeof(aInt);
  printf("the sizeof char, short, int are: %d, %d, %d\n", charsize, shortsize, intsize);

  //----------------TEST CHAR-----------------------------------

  printf("\n writing chars.....\n");
  for (i=0; i<MAXNUM_WORDS*2; i++) {
	  *(char*)(BASE+i)=i%128; // to be safe, use 128 rather than 256
  	  }

  printf("\n testing chars.....\n");
  for (i=0; i<MAXNUM_WORDS*2; i++) {
	  if (* (char*)(BASE+i)!=i%128){  // or .....(char)i,   if not i%128
		  char_err_num++;
	  }
  }

  printf("Testing  Char: the total numbers of error is : %i\n" ,char_err_num);

       //----------------TEST SHORT-----------------------------------

  printf(" \n writing short......\n");
  for (i=0; i<MAXNUM_WORDS; i++) {
           //for (i=0; i<32767; i++) {
	  *(short*)(BASE+i*2)=i%32767; // short, uses two bytes
  }
  printf(" \n testing short......\n");


  printf("Testing Short: the total numbers of error is : %i\n" ,short_err_num);

       //----------------TEST INT    -----------------------------------
  printf(" \n writing integer......\n");

  for (i=0; i<MAXNUM_WORDS/2; i++) {
	  *(int*)(BASE+i*4)=i; // int, use 4 bytes
  }

  printf(" \n testing integer......\n");

  return 0;
}
